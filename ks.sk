#https://docs.skriptlang.org/classes.html

	
options:
    rewardReq: 3, 5, 8, 10, 13, 15, 18, 20, 25, 30, 35, 40, 45 and 50
    rewards: 64 experience bottle, 64 sunflower named "<reset><yellow>&lCoin", 128 experience bottle, 6 netherite ingot, 1 paper named "<reset><red>&lKillstreak Voucher", (1 of unbreakable diamond coast golden helmet of protection 9, unbreaking 255 and mending) named "<yellow><bold>CROWN", 4 paper named "<reset><red>&lKillstreak Voucher", 6 paper named "<reset><red>&lKillstreak Voucher", 7 paper named "<reset><red>&lKillstreak Voucher", 8 paper named "<reset><red>&lKillstreak Voucher", 9 paper named "<reset><red>&lKillstreak Voucher", 10 paper named "<reset><red>&lKillstreak Voucher", 10 paper named "<reset><red>&lKillstreak Voucher" and 15 paper named "<reset><red>&lKillstreak Voucher"
    bounty: 32 sunflower named "<reset><yellow>&lCoin", 48 sunflower named "<reset><yellow>&lCoin", 64 sunflower named "<reset><yellow>&lCoin", 1 paper named "<reset><red>&lKillstreak Voucher", 2 paper named "<reset><red>&lKillstreak Voucher", 4 paper named "<reset><red>&lKillstreak Voucher", 5 paper named "<reset><red>&lKillstreak Voucher", 6 paper named "<reset><red>&lKillstreak Voucher", 7 paper named "<reset><red>&lKillstreak Voucher", 8 paper named "<reset><red>&lKillstreak Voucher", 9 paper named "<reset><red>&lKillstreak Voucher", 10 paper named "<reset><red>&lKillstreak Voucher", 11 paper named "<reset><red>&lKillstreak Voucher" and 20 paper named "<reset><red>&lKillstreak Voucher"
function checkKS(p: player):
    set {_uuid} to {_p}'s uuid
    set {_rewardReq::*} to {@rewardReq}
    set {_rewards::*} to {@rewards}
    set {_bounty::*} to {@bounty}
    if {killStreak::%{_uuid}%} is 20:
        broadcast "<red><bold>%{_p}% IS ON FIRE! THEY'VE REACHED A TWENTY KILLSTREAK!!!"
        broadcast "%{_p}% has been awarded with <green><bold>%{_rewards::8}%"
        set {playerBounty::%{_uuid}%} to {_bounty::8}
        broadcast "<green><bold>LET THE HUNT BEGIN! %{_p}%'s BOUNTY HAS BEEN RAISED TO <reset><red><bold>%{_bounty::8}%!! THEY NOW EXUDE A MURDEROUS AURA!"
        #{_rewards::%loop-index%} is a number:
        #add {_rewards::%loop-index%} to {_p}'s balance
        give {_rewards::8} to {_p}
        set {godmode::%{_uuid}%} to true
        while {godmode::%{_uuid}%} is true:
            apply swiftness 2 to {_p}
            apply glowing to {_p}
            apply strength 2 to {_p}
            wait 100 ticks
    else:
        loop {_rewardReq::*}:
            if {killStreak::%{_uuid}%} is loop-value:
                broadcast "<red><bold>%{_p}% had reached a killstreak of %{killStreak::%{_uuid}%}%!"
                broadcast "%{_p}% has been awarded with <green><bold>%{_rewards::%loop-index%}%"
                set {playerBounty::%{_uuid}%} to {_bounty::%loop-index%}
                broadcast "%{_p}%'s bounty has increased to <red><bold>%{_bounty::%loop-index%}%!"
                #{_rewards::%loop-index%} is a number:
                    #add {_rewards::%loop-index%} to {_p}'s balance
                give {_rewards::%loop-index%} to {_p}
                stop

#on death of player:
    #clear {killStreak::%victim's uuid%}
    #if attacker is a player:
        #add 1 to {killStreak::%attacker's uuid%}
    #checkKS(attacker)


on death of player:
    set {deathlightning} to true
    strike lightning effect at the victim
    #broadcast "event-damagecause is <bold>%event-damagecause%"

    set {_drops::*} to drops  
    clear drops
    drop 1 totem of undying at victim
    loop {_drops::*}:
        drop loop-value at victim
        set velocity of last dropped item to vector(random number between 0 and 0.1, 0.1, random number between 0 and 0.1)
    clear {specialkitlist::%victim's uuid%}
    clear {godmode::%victim's uuid%}    
    #if {playerBounty::%victim's uuid%} is set:
        #give {playerBounty::%victim's uuid%} to {_playerWhoDetonated}
        #broadcast "bounty claimed: %{playerBounty::%victim's uuid%}%"
        #wait 1 tick
        #clear {playerBounty::%victim's uuid%}

    if event-damagecause is entity explosion:
        set {_uuid} to metadata value "playerWhoDetonated" of attacker
        #broadcast "<bold>Crystal kill detected - %{_uuid}%"
        #broadcast "UUID of playerWhoDetonated: %{_uuid}%"
        clear {killStreak::%victim's uuid%}		
        add 1 to {killStreak::%{_uuid}%}
        set {_playerWhoDetonated} to {_uuid} parsed as offline player
        give 5 sunflower named "<reset><yellow>&lCoin" to {_playerWhoDetonated}    
        send "&aEnemy Down" to {_playerWhoDetonated}
        checkKS({_playerWhoDetonated})
        if {playerBounty::%victim's uuid%} is set:
            give {playerBounty::%victim's uuid%} to {_playerWhoDetonated}
            broadcast "%{_playerWhoDetonated}% claimed the bounty: %{playerBounty::%victim's uuid%}%"
            wait 1 tick
            clear {playerBounty::%victim's uuid%}
        {event3::%{_uuid}%} is set
        loop all items in the inventory of {_playerWhoDetonated}:
            if name of loop-item contains "<dark gray><bold>[Permanent] <red><bold>Vampiric Blade":
                {sharpness::%{_uuid}%} is not 30
                add 1 to {sharpness::%{_uuid}%}
                enchant loop-item with "sharpness %{sharpness::%{_uuid}%}%" parsed as enchantment type
                stop
    else if event-damagecause is block explosion:
        set {_uuid} to {anchorkiller}
        #broadcast "<bold>Anchor kill detected - %{_uuid}%"
        #broadcast "UUID of playerWhoDetonated: %{_uuid}%"
        clear {killStreak::%victim's uuid%}		
        add 1 to {killStreak::%{_uuid}%}
        set {anchorkiller} to {_uuid} parsed as offline player
        give 5 sunflower named "<reset><yellow>&lCoin" to {anchorkiller}    
        send "&aEnemy Down" to {anchorkiller}
        checkKS({anchorkiller})
        if {playerBounty::%victim's uuid%} is set:
            give {playerBounty::%victim's uuid%} to {anchorkiller}
            broadcast "%{anchorkiller}% claimed the bounty: %{playerBounty::%victim's uuid%}%"
            wait 1 tick
            clear {playerBounty::%victim's uuid%}
        {event3::%{_uuid}%} is set
        loop all items in the inventory of {anchorkiller}:
            if name of loop-item contains "<dark gray><bold>[Permanent] <red><bold>Vampiric Blade":
                {sharpness::%{_uuid}%} is not 30
                add 1 to {sharpness::%{_uuid}%}
                enchant loop-item with "sharpness %{sharpness::%{_uuid}%}%" parsed as enchantment type
                stop
    else:
        set {_uuid} to attacker's uuid
        give 5 sunflower named "<reset><yellow>&lCoin" to attacker    
        #broadcast "UUID of playerWhoDetonated: %{_uuid}%"
        clear {killStreak::%victim's uuid%}		
        add 1 to {killStreak::%{_uuid}%}
        send "&aEnemy Down" to attacker
        checkKS(attacker)
        if {playerBounty::%victim's uuid%} is set:
            give {playerBounty::%victim's uuid%} to attacker
            broadcast "%attacker% claimed the bounty: %{playerBounty::%victim's uuid%}%"
            wait 1 tick
            clear {playerBounty::%victim's uuid%}
        {event3::%{_uuid}%} is set
        loop all items in the inventory of attacker:
            if name of loop-item contains "<dark gray><bold>[Permanent] <red><bold>Vampiric Blade":
                {sharpness::%{_uuid}%} is not 30
                add 1 to {sharpness::%{_uuid}%}
                enchant loop-item with "sharpness %{sharpness::%{_uuid}%}%" parsed as enchantment type
                stop


on damage of ender crystal:
    set metadata value "playerWhoDetonated" of victim to uuid of attacker
    #broadcast "Metadata value pWhoDetonated is the player %attacker% and the victim was a %victim%"
    
on rightclick on respawn anchor:
    set {anchorkiller} to player's uuid
    #set metadata value "playerWhoDetonated" of {anchorkiller} to player's uuid
    #broadcast "Anchorkiller: %{anchorkiller}%"
    #broadcast "anchorkiller: %{anchorkiller}%, pWhoDetonated: %metadata value "playerWhoDetonated" of {anchorkiller}%"
    #broadcast "Metadata value pWhoDetonated is %metadata value "playerWhoDetonated" of player% and the victim was a %player%"

#on projectile hit:
    #if victim is a explosive minecart:
        #set metadata value "playerWhoDetonated" of victim to uuid of attacker
        #broadcast "Metadata value pWhoDetonated is the player %attacker% and the victim was a %victim%"




command killstreak [<offlineplayer>]:
    trigger:
        arg-1 is not set:
            {killStreak::%player's uuid%} is set:
                send "Your current Kill Streak is %{killStreak::%player's uuid%}%"
            else:
                send "Your current Kill Streak is 0"
        else:
            {killStreak::%arg-1's uuid%} is set:
                send "%arg-1%'s current Kill Streak is %{killStreak::%arg-1's uuid%}%"
            else:
                send "%arg-1%'s current Kill Streak is 0"
				
command setkillstreak <number> [to] <player=%player%>:
    permission: skript.admin
    trigger:
        set {killStreak::%arg-2's uuid%} to arg-1
        send "Set KS to %{killStreak::%arg-2's uuid%}%"
        checkKS(arg-2)

command /test:
    permission: skript.admin
    trigger:
        set slot 0 of player's inventory to sunflower named "<reset><yellow>&lCoin"
        set slot 1 of player's inventory to paper named "<red><bold>Currently DISABLED until balancing is complete"
        set slot 2 of player's inventory to 2 paper named "<reset><red>&lKillstreak Voucher"
        set slot 3 of player's inventory to 1 amethyst shard named "<reset><purple><bold>Weekly Token - Week 1"


command testspecialkit <player=%player%>:
    permission: skript.admin
    trigger:
        set {specialkitlist::%arg-1's uuid%} to 1
        broadcast "<red><bold><italic>%{_p}% Has randomly recieved a DIVINE BLESSING: Swordsman of the Abyss"
        set slot 0 of arg-1's inventory to (netherite sword of sharpness 5 and sweeping edge 3 and fire aspect 2) named "<black><bold>Starless Night"
        set slot 1 of arg-1's inventory to 16 of ender pearl
        set slot 2 of arg-1's inventory to splash potion of strong strength
        set slot 3 of arg-1's inventory to splash potion of strong speed
        set slot 4 of arg-1's inventory to splash potion of strong strength
        set slot 5 of arg-1's inventory to splash potion of strong speed
        set slot 6 of arg-1's inventory to splash potion of strong strength
        set slot 7 of arg-1's inventory to splash potion of strong speed
        set slot 8 of arg-1's inventory to 64 of golden apple
        set slot 9 of arg-1's inventory to splash potion of strong turtle master
        set slot 10 of arg-1's inventory to splash potion of strong turtle master
        set arg-1's helmet to red silence netherite helmet of protection 3 and unbreaking 3 and curse of binding
        set arg-1's chestplate to red silence netherite chestplate of protection 3 and unbreaking 3 and curse of binding
        set arg-1's leggings to red silence netherite leggings of protection 3 and unbreaking 3 and curse of binding
        set arg-1's boots to red silence netherite boots of protection 3 and unbreaking 3 and curse of binding


command /enchantsk <enchantment type>:
    permission: skript.enchant
    trigger:
        enchant player's tool with arg-1
        message "<bold>Enchanted with %arg-1%"



command /rename [<text>]:
    permission: skript.rename
    description: Rename the item in your hand.
    trigger:
        if player's tool is not air:
            if arg-1 is set:
                set name of player's tool to colored arg-1
            else:
                message "&cpleas name >:("
        else:
            message "<bold> Can't name air."

command togglejunk:
    description: Toggle the picking up of junk like dirt and concrete powder
    trigger:
        if {pickupjunk::%player's uuid%} is not true:
            set {pickupjunk::%player's uuid%} to true
            send "You will now pick up 'junk' items."
        else:
            clear {pickupjunk::%player's uuid%}
            send "You will no longer pick up 'junk' items."

command toggleores:
    description: Toggle the picking up of iron, coal, and cobblestone (on by default)
    trigger:
        if {pickupores::%player's uuid%} is not true:
            set {pickupores::%player's uuid%} to true
            send "You will now pick up 'junk' ores."
        else:
            clear {pickupores::%player's uuid%}
            send "You will no longer pick up 'junk' ores."        

command /discord:
    trigger:
        send "&cJoin the discord! Huge Giveaways! &d&l&n<link:https://discord.gg/rw68waNy5M>ClICK" to player

every 3 minutes:
    loop all players:
        send "&c<bold>Use <green><bold>/discord &c<bold>for huge giveaways and updates!" to loop-player

every 60 minutes:
    execute console command "minecraft:kill @e[type=ender_dragon]"
    broadcast "&lCustom Ender Dragon can spawn now!"
    set {_dragon} to random integer between 1 and 2
    if {_dragon} is 1:
        execute console command "jd spawn Thunderstorm"
    if {_dragon} is 2:
        execute console command "jd spawn Firestorm"








every 5 seconds:
    loop all players:
        if name of loop-player's off hand item contains "<cyan><bold>Light Feather":
            apply swiftness 2 to loop-player
            apply resistance 3 to loop-player
            apply strength 1 to loop-player
            apply haste 2 to loop-player
            apply regeneration 2 to loop-player
        if regions at loop-player contains "mazeabyss":
            apply blindness to loop-player for 5 seconds
        loop-player is in world "world_the_end"
        regions at loop-player does not contain "mainendisland"
        if {safehome::%loop-player's uuid%} is not set:
            chance of 1%:
                apply darkness to loop-player for 20 seconds
                apply slowness of tier 3 to loop-player for 20 seconds
                send "<red>Be careful, an eldritch entity has set its sights upon you!" to loop-player
                loop 5 times:
                    spawn a ghast 10 blocks above loop-player
                    apply absorption of tier 999 to the last spawned entity for 20 seconds
                    set gliding of loop-player to off
                    wait 5 ticks
            chance of 1%:
                apply darkness to loop-player for 20 seconds
                apply slowness of tier 3 to loop-player for 20 seconds
                send "<red>Be careful, an Infestation is upon you!" to loop-player
                loop 30 times:
                    spawn a endermite at loop-player
                    apply absorption of tier 999 to the last spawned entity for 20 seconds
                    apply infinite strength of tier 9 to the last spawned entity
                    set gliding of loop-player to off
                    wait 5 ticks
        else if the distance between (block at loop-player) and {safehome::%loop-player's uuid%} is more than 100:
            chance of 1%:
                apply darkness to loop-player for 20 seconds
                apply slowness of tier 3 to loop-player for 20 seconds
                send "<red>Be careful, an eldritch entity has set its sights upon you!" to loop-player
                loop 5 times:
                    spawn a ghast 10 blocks above loop-player
                    apply absorption of tier 999 to the last spawned entity for 20 seconds
                    set gliding of loop-player to off
                    wait 5 ticks
            chance of 1%:
                apply darkness to loop-player for 20 seconds
                apply slowness of tier 3 to loop-player for 20 seconds
                send "<red>Be careful, an Infestation is upon you!" to loop-player
                set gliding of loop-player to off
                loop 30 times:
                    spawn a endermite at loop-player
                    apply absorption of tier 999 to the last spawned entity for 20 seconds
                    apply infinite strength of tier 9 to the last spawned entity
                    wait 5 ticks
        else:
            ActionBar(loop-player, "You are safe here...")
command /rekit:
    trigger:
        if {freerekit::%player's uuid%} is true:
            randomKit(player)
            clear {freerekit::%player's uuid%}
        else if player is holding 3 sunflowers named "<yellow><bold>Coin":
            set player's held item to air
            send "<bold>Kit rerolled!"
            randomKit(player)
        else:
            send "You need to hold 3 coins to reroll"
on shoot:
    shooter is a player
    name of shooter's held item is "<white><bold>AWP"
    set metadata value "custom" of event-projectile to "<white><bold>AWP"

on damage:
    "%damage cause%" is "projectile"
    metadata value "custom" of event-projectile is "<white><bold>AWP"
    cancel event
    kill event-projectile
    damage victim by 20 hearts
    apply blindness 4 to victim for 2 seconds
    apply slowness 3 to victim for 2 seconds
    apply glowing to victim for 5 seconds
    play sound "entity.player.levelup" to attacker

on damage:
    if "%damage cause%" is "projectile":
        if name of attacker's tool contains "<white><bold>AA-12":
            set maximum damage delay of victim to 0 seconds
            wait 3 tick
            set damage delay of victim to 0.5 seconds
        if name of attacker's tool contains "<white><bold>Remington 870":
            set maximum damage delay of victim to 0 seconds
            wait 3 tick
            set damage delay of victim to 0.5 seconds     
    if attacker is hoglin:
        apply resistance of tier 5 to attacker for 1 second
        create explosion of force 9 at location of block at attacker

on explode:
    if event-entity is wither:
        cancel the event
        create an explosion of force 70 at event-location
    if event-entity is fireball:
        cancel the event
        create an explosion of force 5 at event-location
    if event-entity is large fireball:
        cancel the event
        create an explosion of force 10 at event-location
    if event-entity is explosive minecart:
        regions at event-entity does not contain "cpvparena"
        cancel the event
        create an explosion of force 12 at event-location
    if event-entity is tnt:
        cancel the event
        create an explosion of force 10 at event-location
    if event-entity is creeper:
        cancel the event
        execute console command "minecraft:effect give @e[type=creeper] resistance 1 5"
        create an explosion of force 15 at event-location


on teleport:
    set {_lastTeleportLocation} to location of player
    wait 2 ticks  
    
    if {_lastTeleportLocation} is not location of player:
        damage the player by 1


on projectile hit:
    if projectile is snowball:
        create a safe explosion of force 2 at event-location
        loop blocks in radius 2 around event-location:
            if regions at loop-block contains "spleef":
                set loop-block to air
    if projectile is dragon fireball:
        create an explosion of force 8 at event-location
    if projectile is small fireball:
        cancel the event
        create a safe explosion of force 10 at event-location
        loop blocks in radius 5 around event-location:
            if regions at loop-block contains "pvp" or "mainendisland":
                set loop-block to fire
            else if loop-block is not in world "world":
                regions at loop-block does not contain "netherspawn"
                set loop-block to fire
    if projectile is shulker bullet:
        create explosion of force 4 at event-location
    if name of shooter's tool contains "<red><bold><italic>Boom<white><bold><italic>Bow":
        delete projectile
        wait 1 tick
        create explosion of force 3 at location
    if name of shooter's tool contains "<red><bold>RPG":
        delete projectile
        wait 1 tick
        create explosion of force 7 at location

on entity shoot bow:
    if name of shooter's tool contains "<white><bold>Remington 870":
        delete projectile
        wait 1 tick
        if event-entity is a player:
            if player has 20 arrows:
                remove 20 arrows from player's inventory
                make the player shoot an arrow at speed 2
                make the player shoot an arrow at speed 2
                push last shot projectile right at speed 0.05
                make the player shoot an arrow at speed 2
                push last shot projectile left at speed 0.05
                make the player shoot an arrow at speed 2
                push last shot projectile upwards at speed 0.05
                make the player shoot an arrow at speed 2
                push last shot projectile downwards at speed 0.05
                make the player shoot an arrow at speed 2
                push last shot projectile downwards at speed 0.05
                push last shot projectile left at speed 0.05
                make the player shoot an arrow at speed 2
                push last shot projectile downwards at speed 0.05
                push last shot projectile right at speed 0.05
                make the player shoot an arrow at speed 2
                push last shot projectile upwards at speed 0.05
                push last shot projectile left at speed 0.05
                make the player shoot an arrow at speed 2
                push last shot projectile upwards at speed 0.05
                push last shot projectile right at speed 0.05
        
                make the player shoot an arrow at speed 2
                push last shot projectile right at speed 0.1
                make the player shoot an arrow at speed 2
                push last shot projectile left at speed 0.1
                make the player shoot an arrow at speed 2
                push last shot projectile upwards at speed 0.1
                make the player shoot an arrow at speed 2
                push last shot projectile downwards at speed 0.1
                make the player shoot an arrow at speed 2
                push last shot projectile downwards at speed 0.1
                push last shot projectile left at speed 0.1
                make the player shoot an arrow at speed 2
                push last shot projectile downwards at speed 0.1
                push last shot projectile right at speed 0.1
                make the player shoot an arrow at speed 2
                push last shot projectile upwards at speed 0.1
                push last shot projectile left at speed 0.1
                make the player shoot an arrow at speed 2
                push last shot projectile upwards at speed 0.1
                push last shot projectile right at speed 0.1
            else:
                send "You need at least 20 regular arrows" to player
        else:
            make the event-entity shoot an arrow at speed 2.5
            make the event-entity shoot an arrow at speed 2.5
            push last shot projectile right at speed 0.05
            make the event-entity shoot an arrow at speed 2.5
            push last shot projectile left at speed 0.05
            make the event-entity shoot an arrow at speed 2.5
            push last shot projectile upwards at speed 0.05
            make the event-entity shoot an arrow at speed 2.5
            push last shot projectile downwards at speed 0.05
            make the event-entity shoot an arrow at speed 2.5
            push last shot projectile downwards at speed 0.05
            push last shot projectile left at speed 0.05
            make the event-entity shoot an arrow at speed 2.5
            push last shot projectile downwards at speed 0.05
            push last shot projectile right at speed 0.05
            make the event-entity shoot an arrow at speed 2.5
            push last shot projectile upwards at speed 0.05
            push last shot projectile left at speed 0.05
            make the event-entity shoot an arrow at speed 2.5
            push last shot projectile upwards at speed 0.05
            push last shot projectile right at speed 0.05
    
            make the event-entity shoot an arrow at speed 2.5
            push last shot projectile right at speed 0.1
            make the event-entity shoot an arrow at speed 2.5
            push last shot projectile left at speed 0.1
            make the event-entity shoot an arrow at speed 2.5
            push last shot projectile upwards at speed 0.1
            make the event-entity shoot an arrow at speed 2.5
            push last shot projectile downwards at speed 0.1
            make the event-entity shoot an arrow at speed 2.5
            push last shot projectile downwards at speed 0.1
            push last shot projectile left at speed 0.1
            make the event-entity shoot an arrow at speed 2.5
            push last shot projectile downwards at speed 0.1
            push last shot projectile right at speed 0.1
            make the event-entity shoot an arrow at speed 2.5
            push last shot projectile upwards at speed 0.1
            push last shot projectile left at speed 0.1
            make the event-entity shoot an arrow at speed 2.5
            push last shot projectile upwards at speed 0.1
            push last shot projectile right at speed 0.1
    else if name of shooter's tool contains "<white><bold>AA-12":
        cancel event
        if player has 20 arrows:
            remove 20 arrows from player's inventory
            make the player shoot an arrow at speed 1
            make the player shoot an arrow at speed 1
            push last shot projectile right at speed 0.1
            make the player shoot an arrow at speed 1
            push last shot projectile left at speed 0.1
            make the player shoot an arrow at speed 1
            push last shot projectile upwards at speed 0.1
            make the player shoot an arrow at speed 1
            push last shot projectile downwards at speed 0.1
            make the player shoot an arrow at speed 1
            push last shot projectile downwards at speed 0.1
            push last shot projectile left at speed 0.1
            make the player shoot an arrow at speed 1
            push last shot projectile downwards at speed 0.1
            push last shot projectile right at speed 0.1
            make the player shoot an arrow at speed 1
            push last shot projectile upwards at speed 0.1
            push last shot projectile left at speed 0.1
            make the player shoot an arrow at speed 1
            push last shot projectile upwards at speed 0.1
            push last shot projectile right at speed 0.1
    
            make the player shoot an arrow at speed 1
            push last shot projectile right at speed 0.2
            make the player shoot an arrow at speed 1
            push last shot projectile left at speed 0.2
            make the player shoot an arrow at speed 1
            push last shot projectile upwards at speed 0.2
            make the player shoot an arrow at speed 1
            push last shot projectile downwards at speed 0.2
            make the player shoot an arrow at speed 1
            push last shot projectile downwards at speed 0.2
            push last shot projectile left at speed 0.2
            make the player shoot an arrow at speed 1
            push last shot projectile downwards at speed 0.2
            push last shot projectile right at speed 0.2
            make the player shoot an arrow at speed 1
            push last shot projectile upwards at speed 0.2
            push last shot projectile left at speed 0.2
            make the player shoot an arrow at speed 1
            push last shot projectile upwards at speed 0.2
            push last shot projectile right at speed 0.2
        else:
            send "You need at least 20 regular arrows" to player
    else if name of shooter's tool contains "<white><bold>AWP":
        cancel event
        make the player shoot an arrow at speed 8

on damage:
    if damage cause is lightning:
        cancel event

on lightning:
    if {deathlightning} is not true:
        create an explosion of force 20 at event-entity
        loop players in radius 10 around event-entity:
            ignite the loop-player
            damage loop-player by 30
    else:
        set {deathlightning} to false

on right click:
    if name of player's held item contains "<gold><bold>Excalibur":
        if distance between the target block and the player is less than 30:
            if {cooldown::%player's uuid%} is not set:
                strike lightning at the target block
                set {cooldown::%player's uuid%} to now
                while {cooldown::%player's uuid%} is set:
                    wait 10 ticks
                    if time since {cooldown::%player's uuid%} > 60 seconds:
                        clear {cooldown::%player's uuid%}
                        send "<green><bold>Cooldown over! You may now smite again." to player
    if name of player's held item contains "<dark grey><bold>[Permanent] <purple><bold>Necromantic Staff":
        if {cooldown2::%player's uuid%} is not set:
            loop 3 times:
                spawn a zombie at location of block at player
                set name of last spawned entity to "<green><bold>Zombie - %player%"
                equip last spawned entity with diamond helmet of protection 3
                equip last spawned entity with diamond chestplate of protection 3
                equip last spawned entity with diamond leggings of protection 3
                equip last spawned entity with diamond boots of protection 3
                set the held item of last spawned entity to diamond sword of sharpness 5
                apply infinite speed of tier 2 to the last spawned entity
            set {cooldown2::%player's uuid%} to now
            while {cooldown2::%player's uuid%} is set:
                wait 10 ticks
                if time since {cooldown2::%player's uuid%} > 60 seconds:
                    clear {cooldown2::%player's uuid%}
                    send "<green><bold>Cooldown over! You may now summon again." to player

    
command /eredeem:
    trigger:
        if name of player's held item contains "<purple><bold>Event Voucher - Week 1":
            set player's held item to air
            set {event1::%player's uuid%} to true
            send "<purple><bold><underline>Event voucher redeemed! (Will obtain after death)"
        else if name of player's held item contains "<purple><bold>Event Voucher - Week 2":
            set player's held item to air
            set {event2::%player's uuid%} to true
            send "<purple><bold><underline>Event voucher redeemed! (Will obtain after death)"
        else if name of player's held item contains "<purple><bold>Event Voucher - Week 3":
            set player's held item to air
            set {event3::%player's uuid%} to true
            send "<purple><bold><underline>Event voucher redeemed! (Will obtain after death)"
        else if name of player's held item contains "<purple><bold>Event Voucher - Week 4":
            set player's held item to air
            set {event4::%player's uuid%} to true
            send "<purple><bold><underline>Event voucher redeemed! (Will obtain after death)"
        else if name of player's held item contains "<purple><bold>Extra heart":
            if {extraheart::%player's uuid%} is not set:
                set {extraheart::%player's uuid%} to true
                set player's held item to air
                set player's max health to 11
                send "<purple><bold><underline>Heart redeemed!"
            else:
                send "<red><bold>You have reached the maximum amount of hearts allowed by this item!"

        else:
            send "<red>Hold the event item in your hand!" to player    	

command /ewithdraw:
    trigger:
        if {event1::%player's uuid%} is set:
            clear {event1::%player's uuid%}
            set slot 1 of player's inventory to piece of paper named "<purple><bold>Event Voucher - Week 1"
        if {event2::%player's uuid%} is set:
            clear {event2::%player's uuid%}
            set slot 0 of player's inventory to piece of paper named "<purple><bold>Event Voucher - Week 2"
        if {event3::%player's uuid%} is set:
            clear {event3::%player's uuid%}
            set slot 3 of player's inventory to piece of paper named "<purple><bold>Event Voucher - Week 3"
        if {extraheart::%player's uuid%} is set:
            clear {extraheart::%player's uuid%}
            set slot 2 of player's inventory to nether star named "<purple><bold>Extra heart"
            set player's max health to 10
on drop:
    if name of event-item contains "Permanent":
        delete event-dropped item

on right click:
    name of held item contains "<orange><bold>Summon Firestorm"
    remove 1 blaze powder named "<orange><bold>Summon Firestorm" from player's inventory
    set {fireimmune} to player
    send "You will be spared by the firestorm until another player summons one" to player
    loop 10 times:
        spawn a blaze 2 blocks above the player
        set the last spawned entity's max health to 60
        heal the last spawned entity by 90
        apply infinite resistance of tier 4 to the last spawned entity
        apply infinite regeneration of tier 1 to the last spawned entity

on entity target:
    apply infinite resistance of tier 2 to entity
    if entity is blaze:
        if "%entity's target%" is "%{fireimmune}%":
            cancel event
    if entity is zombie:
        if entity's name contains "%entity's target%":
            cancel event
    if entity is zombified piglin:
        chance of 11%:
            loop 2 times:
                spawn a zombified piglin at location of entity's target
                apply infinite strength of tier 4 to the last spawned entity
                apply infinite speed to the last spawned entity
                apply infinite resistance of tier 2 to the last spawned entity
                apply infinite wither to the last spawned entity
        chance of 16%:
            spawn a zombified piglin at location of entity's target
            apply infinite strength of tier 4 to the last spawned entity
            apply infinite speed to the last spawned entity
            apply infinite resistance of tier 2 to the last spawned entity
            apply infinite wither to the last spawned entity
        apply slowness of tier 3 to entity's target for 10 seconds
        apply darkness to entity's target for 10 seconds


on spawn of a piglin:
    set event-entity's held item to crossbow named "<white><bold>Remington 870"

on spawn of a skeleton:
    set event-entity's held item to bow named "<red><bold><italic>Boom<white><bold><italic>Bow"


on spawn of a wither skeleton:
    set event-entity's held item to bow named "<red><bold><italic>Boom<white><bold><italic>Bow"

on spawn of a piglin brute:
    set event-entity's held item to netherite axe of sharpness 5 and unbreaking 3
    apply infinite strength of tier 4 to event-entity
    apply infinite speed of tier 2 to event-entity

on right click with fire charge:
    name of held item contains "<red><bold>Fireball"
    cancel event
    remove 1 fire charge named "<red><bold>Fireball" from player's inventory
    shoot a fireball from player at speed 1


on death of a zombified piglin:
    if victim's name does not contain "<green><bold>Bodyguard":
        cancel drops
        drop 3 gold nuggets at victim
        drop 1 rotten flesh at victim
    else:
        cancel drops



on command "warp":
    if {countdown::%player's uuid%} is not set:
        cancel event
        send "<red><bold>DO NOT MOVE! When the countdown is over <green><bold>use /warp again."
        set {_loc} to location of block at player
        play sound "entity.enderman.teleport" to player
        loop 5 times:
            ActionBar(player, "&aTeleporting in &d%6-loop-value% Seconds..")
            if {_loc} is not location of block at player:
                play sound "item.shield.break" to player
                ActionBar(player, "&cTeleportation cancelled, You moved!")
                stop
            wait 1 second
        set {countdown::%player's uuid%} to true
        play sound "entity.player.levelup" to player
        ActionBar(player, "&aYou may now use that command again.")
        wait 5 seconds
        clear {countdown::%player's uuid%}
on command "team warp":
    if {countdown::%player's uuid%} is not set:
        cancel event
        send "<red><bold>DO NOT MOVE! When the countdown is over <green><bold>use /team warp again."
        set {_loc} to location of block at player
        play sound "entity.enderman.teleport" to player
        loop 5 times:
            ActionBar(player, "&aTeleporting in &d%6-loop-value% Seconds..")
            if {_loc} is not location of block at player:
                play sound "item.shield.break" to player
                ActionBar(player, "&cTeleportation cancelled, You moved!")
                stop
            wait 1 second
        set {countdown::%player's uuid%} to true
        play sound "entity.player.levelup" to player
        ActionBar(player, "&aYou may now use that command again.")
        wait 5 seconds
        clear {countdown::%player's uuid%}
on command "team home":
    if {countdown::%player's uuid%} is not set:
        cancel event
        send "<red><bold>DO NOT MOVE! When the countdown is over <green><bold>use /team home again."
        set {_loc} to location of block at player
        play sound "entity.enderman.teleport" to player
        loop 5 times:
            ActionBar(player, "&aTeleporting in &d%6-loop-value% Seconds..")
            if {_loc} is not location of block at player:
                play sound "item.shield.break" to player
                ActionBar(player, "&cTeleportation cancelled, You moved!")
                stop
            wait 1 second
        set {countdown::%player's uuid%} to true
        play sound "entity.player.levelup" to player
        ActionBar(player, "&aYou may now use that command again.")
        wait 5 seconds
        clear {countdown::%player's uuid%}

on command "home":
    if {countdown::%player's uuid%} is not set:
        cancel event
        send "<red><bold>DO NOT MOVE! When the countdown is over <green><bold>use /home again."
        set {_loc} to location of block at player
        play sound "entity.enderman.teleport" to player
        loop 5 times:
            ActionBar(player, "&aTeleporting in &d%6-loop-value% Seconds..")
            if {_loc} is not location of block at player:
                play sound "item.shield.break" to player
                ActionBar(player, "&cTeleportation cancelled, You moved!")
                stop
            wait 1 second
        set {countdown::%player's uuid%} to true
        play sound "entity.player.levelup" to player
        ActionBar(player, "&aYou may now use that command again.")
        wait 5 seconds
        clear {countdown::%player's uuid%}






on command "sethome":
    if event-commandsender is in world "world":
        send "&lYou can only set home in the end and nether dimensions!" to event-commandsender
        cancel event
        stop
    set {safehome::%player's uuid%} to location of block at player
    send "You are safe here..."
on command "team sethome":
    if event-commandsender is in world "world":
        send "&lYou can only set home in the end and nether dimensions!" to event-commandsender
        cancel event
        stop
    set {safehome::%player's uuid%} to location of block at player
    send "You are safe here..."
on command:
    if command is "pl", "plugins" or "?":
        cancel event
        send "Nope, sorry!" to player
